{"version":3,"sources":["constants/Breakpoints.ts","constants/Colors.ts","components/Footer/Footer.style.ts","components/Footer/Footer.tsx","components/Card/Card.style.ts","components/Card/Card.tsx","components/Select/Select.style.ts","components/Select/Select.tsx","components/DatePicker/DatePicker.style.ts","components/DatePicker/DatePicker.tsx","components/EmptyPlaceholder/EmptyPlaceholder.style.ts","components/EmptyPlaceholder/icon_empty.png","components/EmptyPlaceholder/EmptyPlaceholder.tsx","components/WeatherCard/WeatherCard.style.ts","components/WeatherCard/WeatherCard.tsx","components/WeatherDay/WeatherDay.style.ts","components/WeatherDay/WeatherDay.tsx","components/WeatherWeek/WeatherWeek.style.ts","components/WeatherWeek/chevron.svg","components/WeatherWeek/WeatherWeek.tsx","components/Layout/background.png","components/Layout/Layout.style.ts","components/Layout/logo.png","components/Layout/Layout.tsx","reportWebVitals.ts","index.tsx"],"names":["BREAKPOINTS","COLORS","FooterContainer","styled","footer","Footer","CardContainer","div","mobile","CardTitle","h3","Card","title","children","SelectContainer","select","SelectOption","option","Selector","onChange","name","defaultValue","id","e","target","value","disabled","DatePickerContainer","input","DatePicker","today","Date","minday","String","getDate","padStart","day","month","getMonth","year","getFullYear","type","max","min","EmptyPlaceholderWrapper","EmptyPlaceholderIcon","img","EmptyPlaceholderText","p","EmptyPlaceholder","src","icon","alt","WeatherCardContainer","WeatherCardDate","WeatherCardIcon","props","isWeek","WeatherCardDeg","MONTHS","WeatherCard","data","date","dt","dateMetrix","temp","Math","round","weather","WeatherDaySelectWrapper","WeatherDay","useState","city","setCity","time","setTime","setWeather","useEffect","split","lat","lon","fetch","trim","then","res","json","current","Select","timestamp","join","getTime","WeatherCardsWrapper","WeatherCardsArrowWrapper","sideLeft","WeatherCardGrid","WeatherWeekActions","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fillRule","clipRule","d","fill","SvgChevron","_ref","svgRef","titleId","width","height","viewBox","xmlns","ref","ForwardRef","WeatherWeek","step","setStep","moreLeft","moreRight","screenWidth","window","screen","daily","weatherArr","slice","onClick","map","LayoutContainer","background","LayoutLogo","tablet","Content","smallDesktop","Layout","logo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a2cb53a.chunk.js","sourcesContent":["export enum BREAKPOINTS {\n  smallDesktop = 1400,\n  tablet = 780,\n  mobile = 450,\n}\n","export const COLORS = {\n  darkBlue: \"#2C2D76\",\n  blue: \"#373AF5\",\n  grey: \"#8083A4\",\n  white: \"#FFF\",\n};\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\";\n\nexport const FooterContainer = styled.footer`\n  padding: 16px 0;\n  color: ${COLORS.white};\n  opacity: 0.6;\n`;\n","import React from \"react\";\nimport { FooterContainer } from \"./Footer.style\";\n\nconst Footer: React.FC = () => <FooterContainer>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</FooterContainer>;\n\nexport default Footer;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\";\nimport { BREAKPOINTS } from \"../../constants/Breakpoints\";\n\nexport const CardContainer = styled.div`\n  width: 660px;\n  height: 524px;\n  background-color: ${COLORS.white};\n  margin: 0 17px 34px;\n  padding: 50px 58px 50px;\n  border-radius: 8px;\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    width: 300px;\n    min-height: 464px;\n    height: auto;\n    padding: 32px 24px 64px;\n    overflow-x: hidden;\n    margin-bottom: 10px;\n  }\n\n`;\n\nexport const CardTitle = styled.h3`\n  font-weight: bold;\n  font-size: 32px;\n  color: ${COLORS.darkBlue};\n  margin-bottom: 32px;\n  line-height: 32px;\n`;\n\nexport const CardSelectors = styled.div`\n  display: flex;\n  margin-bottom: 54px;\n`;\n\nexport const WeatherCardContainer = styled.div`\n  display: flex;\n`;\n","import React from \"react\";\nimport { CardContainer, CardTitle } from \"./Card.style\";\n\ntype TProps = {\n  title: string;\n  showDate?: boolean;\n};\n\nconst Card: React.FC<TProps> = ({ title, children }) => {\n  return (\n    <CardContainer>\n      <CardTitle>{title}</CardTitle>\n      {children}\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\"\n\nexport const SelectContainer = styled.select`\n  height: 48px;\n  width: 252px;\n  padding: 0 16px;\n  margin-bottom: 24px;\n  background-color: rgba(128, 131, 164, 0.06);\n  border-radius: 8px;\n  border: 2px solid rgba(128, 131, 164, 0.2);\n  color: ${COLORS.darkBlue};\n`;\n\nexport const SelectOption = styled.option``;\n","import React from \"react\";\nimport { SelectContainer, SelectOption } from \"./Select.style\";\n\ntype TProps = {\n  onChange: (city: string) => void;\n};\n\nconst Selector: React.FC<TProps> = ({ onChange }) => (\n  <SelectContainer name=\"city\" defaultValue=\"\" id=\"city-select\" onChange={(e) => onChange(e.target.value)}>\n    <SelectOption value=\"\" disabled>\n      Select city\n    </SelectOption>\n    <SelectOption value=\"53.195873, 50.100193\">Samara</SelectOption>\n    <SelectOption value=\"53.507836, 49.420393\">Tolyatti</SelectOption>\n    <SelectOption value=\"51.533557, 46.034257\">Saratov</SelectOption>\n    <SelectOption value=\"55.796127, 49.106405\">Kazan</SelectOption>\n    <SelectOption value=\"45.035470, 38.975313\">Krasnodar</SelectOption>\n  </SelectContainer>\n);\n\nexport default Selector;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\";\n\nexport const DatePickerContainer = styled.input`\n  height: 48px;\n  width: 252px;\n  padding: 0 16px;\n  background-color: rgba(128, 131, 164, 0.06);\n  border-radius: 8px;\n  border: 2px solid rgba(128, 131, 164, 0.2);\n  color: ${COLORS.darkBlue};\n`;\n","import React from \"react\";\nimport { DatePickerContainer } from \"./DatePicker.style\";\n\ntype TProps = {\n  onChange: (e: string) => void;\n};\n\nconst DatePicker: React.FC<TProps> = ({ onChange }) => {\n  const today = new Date();\n  const minday = String(today.getDate() - 5).padStart(2, \"0\");\n  const day = String(today.getDate()).padStart(2, \"0\");\n  const month = String(today.getMonth() + 1).padStart(2, \"0\");\n  const year = today.getFullYear();\n\n  return (\n    <DatePickerContainer\n      type=\"date\"\n      max={`${year}-${month}-${day}`}\n      min={`${year}-${month}-${minday}`}\n      onChange={(e) => onChange(e.target.value)}\n    />\n  );\n};\n\nexport default DatePicker;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\";\n\nexport const EmptyPlaceholderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const EmptyPlaceholderIcon = styled.img`\n  margin-bottom: 24px;\n  width: 160px;\n  height: 160px;\n  object-fit: contain;\n`;\n\nexport const EmptyPlaceholderText = styled.p`\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: bold;\n  color: ${COLORS.grey};\n  text-align: center;\n`;\n","export default __webpack_public_path__ + \"static/media/icon_empty.a09393d9.png\";","import React from \"react\";\nimport { EmptyPlaceholderWrapper, EmptyPlaceholderIcon, EmptyPlaceholderText } from \"./EmptyPlaceholder.style\";\nimport icon from \"./icon_empty.png\";\n\nconst EmptyPlaceholder: React.FC = () => (\n  <EmptyPlaceholderWrapper>\n    <EmptyPlaceholderIcon src={icon} alt=\"icon empty\" />\n    <EmptyPlaceholderText>Fill in all the fields and the weather will be displayed</EmptyPlaceholderText>\n  </EmptyPlaceholderWrapper>\n);\n\nexport default EmptyPlaceholder;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\";\nimport { BREAKPOINTS } from \"../../constants/Breakpoints\";\n\nexport const WeatherCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 238px;\n  padding: 20px;\n  background-color: ${COLORS.blue};\n  border-radius: 8px;\n  box-shadow: 0px 4px 4px rgba(4, 5, 73, 0.25), 14px 14px 20px rgba(5, 6, 114, 0.2);\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    border: 2px solid ${COLORS.darkBlue};\n  }\n`;\n\nexport const WeatherCardDate = styled.div`\n  color: ${COLORS.white};\n  font-size: 16px;\n  align-self: flex-start;\n`;\n\nexport const WeatherCardIcon = styled.img<{ isWeek?: boolean }>`\n  width: ${(props) => (props.isWeek ? \"103px\" : \"143px\")};\n  object-fit: contain;\n  align-self: center;\n`;\n\nexport const WeatherCardDeg = styled.div`\n  color: ${COLORS.white};\n  font-size: 32px;\n  align-self: flex-end;\n`;\n","import React from \"react\";\nimport { WeatherCardContainer, WeatherCardDate, WeatherCardIcon, WeatherCardDeg } from \"./WeatherCard.style\";\n\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\ntype TProps = {\n  isWeek?: boolean;\n  [data: string]: any;\n};\n\nconst WeatherCard: React.FC<TProps> = ({ isWeek, data }) => {\n  const date = new Date(data.dt * 1000); // Convert the unix timestamp into milliseconds\n  const dateMetrix = `${date.getDate()} ${MONTHS[date.getMonth()]} ${date.getFullYear()}`;\n  const temp = Math.round(data.temp.day ?? data.temp);\n\n  return (\n    <WeatherCardContainer>\n      <WeatherCardDate>{dateMetrix}</WeatherCardDate>\n      <WeatherCardIcon src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} isWeek={isWeek} />\n      <WeatherCardDeg>{temp > 0 ? `+${temp}` : temp}°</WeatherCardDeg>\n    </WeatherCardContainer>\n  );\n};\n\nexport default WeatherCard;\n","import styled from \"styled-components\";\nimport { BREAKPOINTS } from \"../../constants/Breakpoints\";\n\nexport const WeatherDaySelectWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    flex-direction: column;\n    margin-bottom: 30px;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"../Card\";\nimport Select from \"../Select\";\nimport DatePicker from \"../DatePicker\";\nimport EmptyPlaceholder from \"../EmptyPlaceholder\";\nimport WeatherCard from \"../WeatherCard\";\nimport { WeatherDaySelectWrapper } from \"./WeatherDay.style\";\n\nconst WeatherDay: React.FC = () => {\n  const [city, setCity] = useState<string | null>(null);\n  const [time, setTime] = useState<number | null>(null);\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    if (city && time) {\n      const [lat, lon] = city.split(\",\");\n\n      fetch(\n        `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat.trim()}&lon=${lon.trim()}&units=metric&dt=${time}&appid=b8cd2ec6c2ebdc9dcde7792dd120d62b`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setWeather(data.current);\n        });\n    }\n  }, [city, time]);\n\n  const handleChangeDate = (time: string) => {\n    const timestamp = new Date(time.split(\"-\").join(\".\")).getTime() / 1000; // Convert milliseconds into unix timestamp\n\n    setTime(timestamp);\n  };\n\n  const handleChange = (city: string) => setCity(city);\n\n  return (\n    <Card title=\"Forecast for a Date in the Past\">\n      <WeatherDaySelectWrapper>\n        <Select onChange={handleChange} />\n        <DatePicker onChange={handleChangeDate} />\n      </WeatherDaySelectWrapper>\n      {weather ? <WeatherCard data={weather} /> : <EmptyPlaceholder />}\n    </Card>\n  );\n};\n\nexport default WeatherDay;\n","import styled from \"styled-components\";\nimport { BREAKPOINTS } from \"../../constants/Breakpoints\";\n\nexport const WeatherCardsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  margin-top: 30px;\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    margin: 0 -20px;\n  }\n`;\n\nexport const WeatherCardsArrowWrapper = styled.div<{ sideLeft?: boolean; disabled?: boolean }>`\n  position: absolute;\n  top: 50%;\n  left: ${(props) => (props.sideLeft ? \"-28px\" : \"auto\")};\n  right: ${(props) => (props.sideLeft ? \"auto\" : \"-28px\")};\n  transform: ${(props) => (props.sideLeft ? \"none˝\" : \"rotate(180deg)\")};\n  svg > path {\n    stroke: ${(props) => (props.disabled ? \"rgba(128, 131, 164, 0.4)\" : \"rgba(128, 131, 164, 1)\")};\n    fill: ${(props) => (props.disabled ? \"rgba(128, 131, 164, 0.4)\" : \"rgba(128, 131, 164, 1)\")};\n  }\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    display: none;\n  }\n`;\n\nexport const WeatherCardGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px;\n  width: 100%;\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    display: flex;\n    flex-wrap: nowrap;\n    padding: 0 20px 30px;\n    overflow-x: auto;\n  }\n`;\n\nexport const WeatherWeekActions = styled.div`\n  margin-bottom: 30px;\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    margin-bottom: 0;\n  }\n`;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M9.41424 12.0001L16.7071 19.293L15.2929 20.7072L6.58582 12.0001L15.2929 3.29297L16.7071 4.70718L9.41424 12.0001Z\",\n  fill: \"#8083A4\"\n});\n\nfunction SvgChevron(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevron);\nexport default __webpack_public_path__ + \"static/media/chevron.668da982.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport Card from \"../Card\";\nimport Select from \"../Select\";\nimport EmptyPlaceholder from \"../EmptyPlaceholder\";\nimport WeatherCard from \"../WeatherCard\";\nimport { BREAKPOINTS } from \"../../constants/Breakpoints\";\nimport {\n  WeatherCardsWrapper,\n  WeatherCardsArrowWrapper,\n  WeatherCardGrid,\n  WeatherWeekActions,\n} from \"./WeatherWeek.style\";\nimport { ReactComponent as WeatherCardsArrowLeft } from \"./chevron.svg\";\n\nconst STEP = 3;\n\nconst WeatherWeek: React.FC = () => {\n  const [city, setCity] = useState<string | null>(null);\n  const [weather, setWeather] = useState([]);\n  const [step, setStep] = useState(0);\n  const moreLeft = step >= 1;\n  const moreRight = step + STEP < weather.length;\n  const screenWidth = window.screen.width;\n\n  useEffect(() => {\n    if (city) {\n      const [lat, lon] = city.split(\",\");\n\n      fetch(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat.trim()}&lon=${lon.trim()}&units=metric&appid=b8cd2ec6c2ebdc9dcde7792dd120d62b`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setWeather(data.daily);\n        });\n    }\n  }, [city]);\n\n  const handleClickLeft = () => {\n    if (moreLeft) {\n      setStep(step - 1);\n    }\n  };\n\n  const handleClickRight = () => {\n    if (moreRight) {\n      setStep(step + 1);\n    }\n  };\n\n  const handleChange = (city: string) => setCity(city);\n\n  let weatherArr = screenWidth <= BREAKPOINTS.mobile ? weather : weather.slice(step, STEP + step);\n\n  return (\n    <Card title=\"7 Days Forecast\">\n      <WeatherWeekActions>\n        <Select onChange={handleChange} />\n      </WeatherWeekActions>\n      {weather.length ? (\n        <WeatherCardsWrapper>\n          <WeatherCardsArrowWrapper disabled={!moreLeft} sideLeft={true}>\n            <WeatherCardsArrowLeft onClick={handleClickLeft} />\n          </WeatherCardsArrowWrapper>\n          <WeatherCardGrid>\n            {weatherArr.map((data) => (\n              <WeatherCard isWeek={true} data={data} />\n            ))}\n          </WeatherCardGrid>\n          <WeatherCardsArrowWrapper disabled={!moreRight}>\n            <WeatherCardsArrowLeft onClick={handleClickRight} />\n          </WeatherCardsArrowWrapper>\n        </WeatherCardsWrapper>\n      ) : (\n        <EmptyPlaceholder />\n      )}\n    </Card>\n  );\n};\n\nexport default WeatherWeek;\n","export default __webpack_public_path__ + \"static/media/background.edb2be03.png\";","import styled from \"styled-components\";\nimport { COLORS } from \"../../constants/Colors\";\nimport { BREAKPOINTS } from \"../../constants/Breakpoints\";\nimport background from \"./background.png\";\n\nexport const LayoutContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n  background-image: url(${background});\n  background-size: cover;\n  background-color: ${COLORS.blue};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const LayoutLogo = styled.img`\n  width: 775px;\n  height: auto;\n  object-fit: contain;\n  margin: 65px auto 60px;\n\n  @media screen and (max-width: ${BREAKPOINTS.tablet}px) {\n    width: 420px;\n    margin: 32px auto 24px;\n  }\n\n  @media screen and (max-width: ${BREAKPOINTS.mobile}px) {\n    width: 243px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (max-width: ${BREAKPOINTS.smallDesktop}px) {\n    flex-direction: column;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.a416676a.png\";","import React from \"react\";\nimport Footer from \"../Footer\";\nimport WeatherDay from \"../WeatherDay\";\nimport WeatherWeek from \"../WeatherWeek\";\nimport { LayoutContainer, LayoutLogo, Content } from \"./Layout.style\";\nimport logo from \"./logo.png\";\n\nconst Layout: React.FC = () => (\n  <LayoutContainer>\n    <LayoutLogo src={logo} alt=\"Weather forecast\" />\n    <Content>\n      <WeatherWeek />\n      <WeatherDay />\n    </Content>\n    <Footer />\n  </LayoutContainer>\n);\n\nexport default Layout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Layout from \"./components/Layout\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}